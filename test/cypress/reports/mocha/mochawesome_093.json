{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2019-03-28T01:28:18.059Z",
    "end": "2019-03-28T01:28:18.251Z",
    "duration": 192,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "382caa49-10ad-42a2-8ae5-60d908bd0843",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "45d7aa4b-900e-4769-be24-22b7b0af939e",
        "title": "Being a plugin handling Scenario Outline",
        "fullFile": "",
        "file": "",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Using Scenario Outlines (example #1)",
            "fullTitle": "Being a plugin handling Scenario Outline Using Scenario Outlines (example #1)",
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (backgroundSection) {\n  backgroundSection.steps.forEach(step => {\n    stepTest.call(this, step);\n  });\n}\nscenario.steps.forEach(step => {\n  const newStep = Object.assign({}, step);\n  newStep.text = replaceParameterTags(rowData, newStep.text);\n  stepTest.call(this, newStep, rowData);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ea1cee72-9764-450a-92c5-492c291bb79d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Using Scenario Outlines (example #2)",
            "fullTitle": "Being a plugin handling Scenario Outline Using Scenario Outlines (example #2)",
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (backgroundSection) {\n  backgroundSection.steps.forEach(step => {\n    stepTest.call(this, step);\n  });\n}\nscenario.steps.forEach(step => {\n  const newStep = Object.assign({}, step);\n  newStep.text = replaceParameterTags(rowData, newStep.text);\n  stepTest.call(this, newStep, rowData);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7c81b9eb-076b-4651-b6f6-ebd249cca3c7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Use juicer with apple (example #1)",
            "fullTitle": "Being a plugin handling Scenario Outline Use juicer with apple (example #1)",
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (backgroundSection) {\n  backgroundSection.steps.forEach(step => {\n    stepTest.call(this, step);\n  });\n}\nscenario.steps.forEach(step => {\n  const newStep = Object.assign({}, step);\n  newStep.text = replaceParameterTags(rowData, newStep.text);\n  stepTest.call(this, newStep, rowData);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "297801ee-338a-4fdb-a7bd-01994194ec5d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Use juicer with pineapple (example #2)",
            "fullTitle": "Being a plugin handling Scenario Outline Use juicer with pineapple (example #2)",
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (backgroundSection) {\n  backgroundSection.steps.forEach(step => {\n    stepTest.call(this, step);\n  });\n}\nscenario.steps.forEach(step => {\n  const newStep = Object.assign({}, step);\n  newStep.text = replaceParameterTags(rowData, newStep.text);\n  stepTest.call(this, newStep, rowData);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "11f1bad5-86f1-4e0d-86b5-613c7c555979",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Use juicer with strawberry (example #3)",
            "fullTitle": "Being a plugin handling Scenario Outline Use juicer with strawberry (example #3)",
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (backgroundSection) {\n  backgroundSection.steps.forEach(step => {\n    stepTest.call(this, step);\n  });\n}\nscenario.steps.forEach(step => {\n  const newStep = Object.assign({}, step);\n  newStep.text = replaceParameterTags(rowData, newStep.text);\n  stepTest.call(this, newStep, rowData);\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ed0012cb-5679-411c-9501-8c8b0f74cb21",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ea1cee72-9764-450a-92c5-492c291bb79d",
          "7c81b9eb-076b-4651-b6f6-ebd249cca3c7",
          "297801ee-338a-4fdb-a7bd-01994194ec5d",
          "11f1bad5-86f1-4e0d-86b5-613c7c555979",
          "ed0012cb-5679-411c-9501-8c8b0f74cb21"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 133,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}